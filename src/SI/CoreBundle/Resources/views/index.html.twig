{% extends "SICoreBundle::layout.html.twig" %}

{% block breadcumb %}
    <section class="content-header">
        <h1>
            Tableau de Bord

        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Acceuil</a></li>
            <li class="active">Tableau de Bord</li>
        </ol>
    </section>
{% endblock %}

{% block content %}
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-aqua">
                <div class="inner">
                    <h3>
                        {% set total = 0 %}
                        {% for key, val in invoices %}
                            {% for k, v in val.InvoiceItems %}
                                {% set total = total + (v.quantity * v.products.prixDeVente) %}
                            {% endfor %}
                        {% endfor %}
                        {{ total|number_format(2, '.', ',') }} FCFA
                    </h3>
                    <p>Total Ventes</p>
                </div>
                <div class="icon">
                    <i class="fa fa-bag"></i>
                </div>
                <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>

            </div>
        </div><!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-green">
                <div class="inner">
                    <h3>
                        {% set banques = 0 %}
                        {% for key, val in invoices %}
                            {% for k, v in val.InvoiceItems %}
                                {% if val.paymentMethods == 'Virement'  %}
                                     {% set banques = banques + (v.quantity * v.products.prixDeVente) %}
                                {% elseif  val.paymentMethods == 'Chèque'  %}
                                    {% set banques = banques + (v.quantity * v.products.prixDeVente) %}
                                {% endif %}
                            {% endfor %}
                        {% endfor %}
                        {{ banques|number_format(2, '.', ',') }} FCFA
                    </h3>
                    <p>Banque</p>
                </div>
                <div class="icon">
                    <i class="ion ion-stats-bars"></i>
                </div>
                <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div><!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-yellow">
                <div class="inner">
                    <h3>
                        {% set caisses = 0 %}
                        {% for key, val in invoices %}
                            {% for k, v in val.InvoiceItems %}
                                {% if val.paymentMethods == 'Espèces'  %}
                                    {% set caisses = caisses + (v.quantity * v.products.prixDeVente) %}
                                {% endif %}
                            {% endfor %}
                        {% endfor %}
                        {{ caisses|number_format(2, '.', ',') }} FCFA
                    </h3>
                    <p>Caisses</p>
                </div>
                <div class="icon">
                    <i class="ion ion-person-add"></i>
                </div>
                <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div><!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-red">
                <div class="inner">
                    <h3>0</h3>
                    <p>Total Depenses</p>
                </div>
                <div class="icon">
                    <i class="ion ion-pie-graph"></i>
                </div>
                <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div><!-- ./col -->
    </div><!-- /.row -->

    <div class="row">
        <!-- Left col -->
        <section class="col-lg-12 connectedSortable">
            <!-- Custom tabs (Charts with tabs)-->
            <div class="nav-tabs-custom">
                <!-- Tabs within a box -->
                <ul class="nav nav-tabs pull-right">
                    <li class="active"><a href="#revenue-chart" data-toggle="tab">Tresorerie</a></li>
                    <li><a href="#sales-chart" data-toggle="tab">Banque</a></li>
                    <li class="pull-left header"><i class="fa fa-inbox"></i> Caisses</li>
                </ul>
                <div class="tab-content no-padding">
                    <!-- Morris chart - Sales -->
                    <div class="chart tab-pane active" id="revenue-chart" style="position: relative; height: 300px;"></div>
                    <div class="chart tab-pane" id="sales-chart" style="position: relative; height: 300px;"></div>
                </div>
            </div><!-- /.nav-tabs-custom -->

        </section>

{% endblock %}
        {% block script %}
            <script type="text/javascript">
                "use strict";
                $(function () {
                    /* Morris.js Charts */
                    // Sales chart
                    var area = new Morris.Area({
                        element: 'revenue-chart',
                        resize: true,
                        data: [
                            {y: '2011 Q1', item1: 2666, item2: 2666},
                            {y: '2011 Q2', item1: 2778, item2: 2294},
                            {y: '2011 Q3', item1: 4912, item2: 1969},
                            {y: '2011 Q4', item1: 3767, item2: 3597},
                            {y: '2012 Q1', item1: 6810, item2: 1914},
                            {y: '2012 Q2', item1: 5670, item2: 4293},
                            {y: '2012 Q3', item1: 4820, item2: 3795},
                            {y: '2012 Q4', item1: 15073, item2: 5967},
                            {y: '2013 Q1', item1: 10687, item2: 4460},
                            {y: '2013 Q2', item1: 8432, item2: 5713}
                        ],
                        xkey: 'y',
                        ykeys: ['item1', 'item2'],
                        labels: ['Item 1', 'Item 2'],
                        lineColors: ['#a0d0e0', '#3c8dbc'],
                        hideHover: 'auto'
                    });

                    //Donut Chart
                    var donut = new Morris.Donut({
                        element: 'sales-chart',
                        resize: true,
                        colors: ["#3c8dbc", "#f56954", "#00a65a"],
                        data: [
                            {label: "Download Sales", value: 12},
                            {label: "In-Store Sales", value: 30},
                            {label: "Mail-Order Sales", value: 20}
                        ],
                        hideHover: 'auto'
                    });

                    //Fix for charts under tabs
                    $('.box ul.nav a').on('shown.bs.tab', function (e) {
                        area.redraw();
                        donut.redraw();
                    });
                });
            </script>
        {% endblock %}